set completion-prefix-display-length 2
#set editing-mode vi
set bell-style none
# By default up/down are bound to previous-history
# and next-history respectively. The following does the
# same but gives the extra functionality where if you
# type any text (or more accurately, if there is any text
# between the start of the line and the cursor),
# the subset of the history starting with that text
# is searched (like 4dos for e.g.).
# Note to get rid of a line just Ctrl-C
"\e[B": history-search-forward
"\e[A": history-search-backward

$if Bash

  #do history expansion when space entered
  Space: magic-space
$endif

$if mode=emacs
  # alternate mappings for "page up" and "page down" to search the history
  "\e[5~": history-search-backward
  "\e[6~": history-search-forward

  # mappings for Ctrl-left-arrow and Ctrl-right-arrow for word moving
  "\e[1;5C": forward-word
  "\e[1;5D": backward-word
  "\e[5C": forward-word
  "\e[5D": backward-word
  "\e\e[C": forward-word
  "\e\e[D": backward-word
  # up/down for incremental history search
  "\e[1;5A": reverse-search-history
  "\e[1;5B": forward-search-history

  # mappings for Alt-left-arrow and trl-Alt-right-arrow for word moving
  "\e[1;3C": forward-word
  "\e[1;3D": backward-word
  # up/down for non incremental history search
  "\e[1;3A": non-incremental-reverse-search-history
  "\e[1;3B": non-incremental-forward-search-history

  # mappings for Ctrl-Alt-left-arrow and Ctrl-Alt-right-arrow for word moving
  "\e[1;7C": end-of-line
  "\e[1;7D": beginning-of-line
  # up/down for non incremental history search
  "\e[1;7A": non-incremental-reverse-search-history
  "\e[1;7B": non-incremental-forward-search-history

$endif
